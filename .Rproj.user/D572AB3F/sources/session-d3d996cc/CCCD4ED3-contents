---
title: "Statistical Consulting"
author: "Niloofar Khalajzadeh"
date: "2023-10-09"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(MASS)
library(dplyr)
library(lme4)
library(ordinal)
library(ggplot2)
library(tidyverse)
library(corrplot)
library(caret)
library(ggpubr)
library(e1071)
library(rpart)
library(reshape2)
library(Metrics)
library(pracma)
library(emmeans)
library(multcomp)
```

```{r}
experiment_setup <- read.csv("experiment_setup.csv", sep = ";")
disease_score <- read.csv("disease_score.csv", sep = ";")
```

```{r warning=FALSE}
get_cultivar_label <- function(x) {
  experiment_setup[experiment_setup$Cultivar == x,][1,]$Sensitivity
}

disease_score$sensitivity <- unlist(lapply(disease_score$Cultivar, get_cultivar_label))

n <- dim(disease_score)[1]
disease_score <- disease_score[1:(n-3),]
```

```{r}
disease_score$T9.RGR..cm. <- as.numeric(disease_score$T9.RGR..cm.)
disease_score$T9.length..cm. <- as.numeric(disease_score$T9.length..cm.)
disease_score <- disease_score %>%
  filter(!is.na(sensitivity), sensitivity != "")
disease_score <- disease_score %>% filter(T9.length..cm. >= 0, T9.RGR..cm. >= 0)
disease_score_clean <- subset(disease_score, Pathogen != "negative control")
disease_score_clean <- na.omit(disease_score_clean)

disease_score_clean
```

```{r}
disease_score_clean$Treatment <- disease_score_clean$Treatment..1.34. 
disease_score_clean$Block <- disease_score_clean$Block.nr. 
disease_score_clean$Plant_nr <- disease_score_clean$Plant.nr.
disease_score_clean$T3 <- disease_score_clean$T3.disease..0.1. 
disease_score_clean$T4 <- disease_score_clean$T4.disease....leaves. 
disease_score_clean$T5_per <- disease_score_clean$T5.disease.... 
disease_score_clean$T5 <- disease_score_clean$T5.affected..0.1. 
disease_score_clean$T6_per <- disease_score_clean$T6.disease.... 
disease_score_clean$T6 <- disease_score_clean$T6.affected..0.1. 
disease_score_clean$T7_per <- disease_score_clean$T7.disease.... 
disease_score_clean$T7 <- disease_score_clean$T7.affected..0.1. 
disease_score_clean$T8_per <- disease_score_clean$T8.disease.... 
disease_score_clean$T8 <- disease_score_clean$T8.affected..0.1. 
disease_score_clean$T8_con <- disease_score_clean$T8.mate.disease..0.3. 
disease_score_clean$T9_per <- disease_score_clean$T9.disease.... 
disease_score_clean$T9 <- disease_score_clean$T9.affected..0.1. 
disease_score_clean$T9_con <- disease_score_clean$T9.mate.disease..0.3. 
disease_score_clean$T5_length <- disease_score_clean$T5.length..cm. 
disease_score_clean$T5_RGR <- disease_score_clean$T5.Relative.Growth.Rate.RGR..cm. 
disease_score_clean$T9_length <- disease_score_clean$T9.length..cm. 
disease_score_clean$T9_RGR <- disease_score_clean$T9.RGR..cm. 
disease_score_clean$sensitivity_f <- disease_score_clean$sensitivity

disease_score_clean$time_to_first <- apply(disease_score_clean[,c("T3", "T5", "T6", "T7", "T8","T9")], 1, function(x) {
    affected_week <- which(x == 1)
    if (length(affected_week) == 0) {
        return(70)
    } else {
        return(affected_week[1])
    }
})

new_dataframe <- data.frame()

new_dataframe <- disease_score_clean %>%
  select(sensitivity_f, Treatment, Soiltype, Cultivar, Pathogen, Plant_nr, Block, T3, T4, T5, T5_per, T6, T6_per, T7, T7_per, T8, T8_per, T9, T9_per, time_to_first, T5_length, T9_length, T5_RGR, T9_RGR, T8_con, T9_con)

new_dataframe$sensitivity_f <- factor(new_dataframe$sensitivity_f, ordered = TRUE, 
                                    levels = c("Very sensitive", "Sensitive", "Reasonably sensitive", 
                                               "intermediate with some damage", "Relatively tolerant", "tolerant", 
                                               "highly tolerant", "Resistant"))

new_dataframe$T3 <- ifelse(new_dataframe$T3 == 0, 0, 1)
new_dataframe$T5 <- ifelse(new_dataframe$T5 == 0, 0, 1)
new_dataframe$T6 <- ifelse(new_dataframe$T6 == 0, 0, 1)
new_dataframe$T7 <- ifelse(new_dataframe$T7 == 0, 0, 1)
new_dataframe$T8 <- ifelse(new_dataframe$T8 == 0, 0, 1)
new_dataframe$T9 <- ifelse(new_dataframe$T9 == 0, 0, 1)

new_dataframe$Pathogen <- factor(disease_score_clean$Pathogen)
new_dataframe$Soiltype <- factor(disease_score_clean$Soiltype)
new_dataframe$Cultivar <- factor(disease_score_clean$Cultivar)
new_dataframe$Treatment <- factor(disease_score_clean$Treatment)

new_dataframe$T8_con <- factor(new_dataframe$T8_con, levels = 0:3)
new_dataframe$T9_con <- factor(new_dataframe$T9_con, levels = 0:3)
new_dataframe$T5_length <- as.numeric(sub(",", ".", new_dataframe$T5_length, fixed = TRUE))
new_dataframe$T9_length <- as.numeric(sub(",", ".", new_dataframe$T9_length, fixed = TRUE))
new_dataframe$T5_RGR <- as.numeric(sub(",", ".", new_dataframe$T5_RGR, fixed = TRUE))
new_dataframe$T9_RGR <- as.numeric(sub(",", ".", new_dataframe$T9_RGR, fixed = TRUE))
```

```{r}
summary(new_dataframe)
```

```{r}
# Bar plot for Sensitivity_f
ggplot(new_dataframe) + aes(x = sensitivity_f) +
  geom_bar(fill = "darkmagenta") + coord_flip() +
  theme_minimal() + 
  labs(title = "Bar Plot of Sensitivity", x = "Sensitivity", y = "Count")
```


```{r}
# Bar plot for Pathogen
ggplot(new_dataframe, aes(x = Pathogen)) +
  geom_bar(fill = "coral") + 
  theme_minimal() +
  labs(title = "Bar Plot of Pathogen", x = "Pathogen", y = "Count")
```

```{r}
# Bar plot for Cultivar
ggplot(new_dataframe, aes(x = Cultivar)) +
  geom_bar(fill = "blue", width = 0.5) + coord_flip() +
  theme_minimal() +
  labs(title = "Bar Plot of Cultivar", x = "Cultivar", y = "Count")
```

```{r}
# Bar plot for Soil type
ggplot(new_dataframe, aes(x = Soiltype)) +
  geom_bar(fill = "green", width = 0.5) +
  theme_minimal() +
  labs(title = "Bar Plot of Soil type", x = "Soil type", y = "Count")
```

```{r}
average_affected_leaves <- aggregate(T4 ~ Cultivar, data = new_dataframe, mean)
average_affected_leaves_sorted <- average_affected_leaves %>%
  arrange(desc(T4))
ggplot(average_affected_leaves_sorted, aes(x = reorder(Cultivar, T4), y = T4)) +
  geom_bar(stat = "identity", fill = "blue") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(x = "Cultivar", y = "Average Affected Leaves")
```


```{r}
by_cultivar <- split(new_dataframe, new_dataframe$Cultivar )
```


```{r}
analysis_by_cultivar_freq <- function(cultivar, with_regression = FALSE) {
  cultivar_data <- by_cultivar[[cultivar]]
  
  combined_data <- list()
  
  for (block in unique(cultivar_data$Block)) {
    block_data <- cultivar_data[cultivar_data$Block == block, ]
    block_ag <- block_data %>%
      group_by(Pathogen) %>%
      summarise(
        f3 = mean(T3),
        f5 = mean(T5),
        f6 = mean(T6),
        f7 = mean(T7),
        f8 = mean(T8),
        f9 = mean(T9),
      ) %>%
      pivot_longer(cols = starts_with("f"), names_to = "TimePoint", values_to = "Freq")

    # Add block information
    block_ag$Block <- block
    combined_data[[block]] <- block_ag
  }
  
  long_data <- bind_rows(combined_data)

  long_data$TimePoint <- as.numeric(gsub("f", "", long_data$TimePoint))

  r <- ggplot(long_data, aes(x = TimePoint, y = Freq, group = interaction(Block, Pathogen), color = Pathogen)) +
    geom_line() + 
    geom_point() +
    facet_wrap(~Block) +
    theme_minimal() +
    labs(title = paste("Affected Plant Frequency over Time by Block and Pathogen for", cultivar),
         x = "Time Point",
         y = "Frequency of Affected Plants",
         color = "Pathogen")
  
#  if (with_regression) {
#    r <- r + geom_smooth(method = "lm", se = FALSE)
 # } else {
 #   r <- r + geom_line()
 # }
  
#  return(r)
}
```


```{r}
# Without Regression
for (cultivar in unique(new_dataframe$Cultivar)) {
    print(analysis_by_cultivar_freq(cultivar, FALSE))
}
```

```{r}
# With Quadratic Regression
for (cultivar in unique(new_dataframe$Cultivar)) {
    print(analysis_by_cultivar_freq(cultivar, TRUE))
}

```

```{r}
# Percentage of affected plants
analysis_by_cultivar_percentage <- function(cultivar, with_regression = TRUE) {
    
  cultivar_data <- by_cultivar[[cultivar]]
  
  combined_data <- list()
  
  for (block in unique(cultivar_data$Block)) {
    block_data <- cultivar_data[cultivar_data$Block == block, ]
    block_ag <- block_data %>%
      group_by(Pathogen) %>%
      summarise(
        t3 = 0,
        t5 = mean(T5_per),
        t6 = mean(T6_per),
        t7 = mean(T7_per),
        t8 = mean(T8_per),
        t9 = mean(T9_per),
      ) %>%
      pivot_longer(cols = starts_with("t"), names_to = "TimePoint", values_to = "Percent")
  
    # Add block information
    block_ag$Block <- block
    combined_data[[block]] <- block_ag
  }
  
  long_data <- bind_rows(combined_data)
  
  long_data$TimePoint <- as.numeric(gsub("t", "", long_data$TimePoint))
  
  r <- ggplot(long_data, aes(x = TimePoint, y = Percent, group = interaction(Block, Pathogen), color = Pathogen)) +
    geom_point() + 
    geom_line() + 
    facet_wrap(~Block) +
    theme_minimal() +
    labs(title = paste(" Percentage of Affected Plant over Time by Block and Pathogen for", cultivar),
         x = "Time Point",
         y = "Percentage of Affected Plants",
         color = "Pathogen")
  
if (with_regression) {
    r <- r + geom_smooth(method = "lm", se = FALSE)
  } else {
   r
  }
  return(r)
}
```

```{r}
for (cultivar in unique(new_dataframe$Cultivar)) {
    print(analysis_by_cultivar_percentage(cultivar, TRUE))
}
```

```{r}
analysis_by_cultivar_freq <- function(cultivar, with_regression = FALSE) {
  cultivar_data <- by_cultivar[[cultivar]]
  
  combined_data <- list()
  
  for (block in unique(cultivar_data$Block)) {
    block_data <- cultivar_data[cultivar_data$Block == block, ]
    block_ag <- block_data %>%
      group_by(Soiltype) %>%
      summarise(
        f3 = mean(T3),
        f5 = mean(T5),
        f6 = mean(T6),
        f7 = mean(T7),
        f8 = mean(T8),
        f9 = mean(T9),
      ) %>%
      pivot_longer(cols = starts_with("f"), names_to = "TimePoint", values_to = "Freq")

    # Add block information
    block_ag$Block <- block
    combined_data[[block]] <- block_ag
  }
  
  long_data <- bind_rows(combined_data)

  long_data$TimePoint <- as.numeric(gsub("f", "", long_data$TimePoint))

  r <- ggplot(long_data, aes(x = TimePoint, y = Freq, group = interaction(Block, Soiltype), color = Soiltype)) +
    geom_point() +
    geom_line() +
    facet_wrap(~Block) +
    theme_minimal() +
    labs(title = paste("Affected Plant Frequency over Time by Block and Soil Type for", cultivar),
         x = "Time Point",
         y = "Frequency of Affected Plants",
         color = "Soil Type")
  
  if (with_regression) {
    r <- r + geom_smooth(method = "lm", se = FALSE)
  } else {
    r <- r + geom_line()
  }
  
  return(r)
}

# With Quadratic Regression
for (cultivar in unique(new_dataframe$Cultivar)) {
    print(analysis_by_cultivar_freq(cultivar, TRUE))
}

```

```{r}
analysis_by_cultivar_freq <- function(cultivar) {
  cultivar_data <- by_cultivar[[cultivar]]
  
  combined_data <- list()
  auc_data <- data.frame(Block = integer(), Pathogen = character(), Soiltype = character(), AUC = numeric())
  
  for (block in unique(cultivar_data$Block)) {
    block_data <- cultivar_data[cultivar_data$Block == block, ]
    block_ag <- block_data %>%
      group_by(Pathogen, Soiltype) %>%
      summarise(
        f3 = mean(T3),
        f5 = mean(T5),
        f6 = mean(T6),
        f7 = mean(T7),
        f8 = mean(T8),
        f9 = mean(T9),
        .groups = "drop"
      ) %>%
      pivot_longer(cols = starts_with("f"), names_to = "TimePoint", values_to = "Freq")

    block_ag$Block <- block
    combined_data[[block]] <- block_ag

    # Calculate AUC for each pathogen and soil type within the block
    for (combo in unique(paste(block_ag$Pathogen, block_ag$Soiltype, sep = "_"))) {
      combo_data <- block_ag[block_ag$Pathogen == strsplit(combo, "_")[[1]][1] & block_ag$Soiltype == strsplit(combo, "_")[[1]][2], ]
      time_points <- as.numeric(gsub("f", "", combo_data$TimePoint))
      freq_values <- combo_data$Freq
      auc_value <- trapz(time_points, freq_values)
      auc_data <- rbind(auc_data, data.frame(Block = block, Pathogen = strsplit(combo, "_")[[1]][1], Soiltype = strsplit(combo, "_")[[1]][2], AUC = auc_value, Cultivar = cultivar))
    }
  }

  return(auc_data)
}
```

```{r}
auc_results <- list()
for (cultivar in unique(new_dataframe$Cultivar)) {
  auc_results[[cultivar]] <- analysis_by_cultivar_freq(cultivar)
}

print(auc_results[["Kennedy"]])
```

```{r}
df_anova <- bind_rows(auc_results)

anova_result <- aov(AUC ~ Cultivar + Pathogen + Soiltype + Cultivar:Pathogen + Block, data = df_anova)
summary(anova_result)

emmeans_result <- emmeans(anova_result, specs = ~ Cultivar:Pathogen)
lsd_result <- cld(emmeans_result, adjust = "sidak")

print(lsd_result)
```

```{r}
set.seed(123)

data_size <- nrow(new_dataframe)

train_indices <- sample(1:data_size, size = round(0.8 * data_size))

train_set <- new_dataframe[train_indices, ]
test_set <- new_dataframe[-train_indices, ]

model <- lm(T9_per ~ T5_per + T6_per + T5_length +T5_RGR, data = train_set)
# T9_per ~ T5_per + T6_per + T7_per + T8_per + T5_length + T9_length + T5_RGR + T9_RGR
summary(model)

```

```{r}
set.seed(123)

analysis_by_cultivar_percentage <- function(cultivar) {
  cultivar_data <- by_cultivar[[cultivar]]
  

  combined_data <- list()
  
  for (block in unique(cultivar_data$Block)) {
    block_data <- cultivar_data[cultivar_data$Block == block, ]
    block_ag <- block_data %>%
      group_by(Pathogen) %>%
      summarise(
        t3 = 0,
        t5 = mean(T5_per),
        t6 = mean(T6_per),
        t7 = mean(T7_per),
        t8 = mean(T8_per),
        t9 = mean(T9_per),
        T5_length = T5_length,
        T5_RGR = T5_RGR
      ) %>%
      ungroup()
    
    
    block_ag$Block <- block
    combined_data[[block]] <- block_ag
  }
  
  df_anova <- bind_rows(combined_data)
  

  data_size <- nrow(df_anova)
  train_indices <- sample(1:data_size, size = round(0.8 * data_size))
  
  train_set <- df_anova[train_indices, ]
  test_set <- df_anova[-train_indices, ]


  model <- lm(t9 ~ t5 + t8 + T5_length + T5_RGR, data = train_set)
  print(summary(model))
  
  # Predict on test set
  test_set$Predicted_T9_per <- predict(model, newdata = test_set)
  
  # Calculate and print model performance on test set
  mse <- mean((test_set$T9_per - test_set$Predicted_T9_per)^2)
  print(paste("Mean Squared Error on test set:", mse))
  
  # Plotting is done only with actual data, not predictions
  long_data <- df_anova %>%
    select(-starts_with("Predicted_")) %>%
    pivot_longer(cols = starts_with("t"), names_to = "TimePoint", values_to = "Percent")
  
  long_data$TimePoint <- as.numeric(gsub("t", "", long_data$TimePoint))
  
  r <- ggplot(long_data, aes(x = TimePoint, y = Percent, group = interaction(Block, Pathogen), color = Pathogen)) +
    geom_point() + 
    geom_line() + 
    facet_wrap(~Block) +
    theme_minimal() +
    labs(title = paste("Average Percentage of Affected Plant over Time by Block and Pathogen for", cultivar),
         x = "Time Point",
         y = "Average Percentage of Affected Plants",
         color = "Pathogen")
  
  return(r)
}

# Run analysis for each cultivar
for (cultivar in unique(cultivar_data$Cultivar)) {
  plot <- analysis_by_cultivar_percentage(cultivar)
  print(plot)
}

```


```{r}
predictions <- predict(model, newdata = test_set)

test_set$Predicted_T9_per <- predictions

```




