"0","# Speech rate (Number of syllables/ total time)"
"0","library(dplyr)"
"0",""
"0","calculate_speech_rate <- function(data, language, task) {"
"0","  "
"0","  filtered_data <- data %>%"
"0","    filter(Language == language, Task == task)"
"0","  "
"0","  speech_rates <- c()"
"0","  time_intervals <- seq(0, max(filtered_data$tmax), by = TIME_INTERVAL)"
"0","  "
"0","  total_nucleis <- 0"
"0","  for (i in 1:(length(time_intervals) - 1)) {"
"0","    start_time <- time_intervals[i]"
"0","    end_time <- time_intervals[i + 1]"
"0","  "
"0","    timespan <- filtered_data[filtered_data$tmax >= start_time & filtered_data$tmax <= end_time,]"
"0","    timespan_ordered <- timespan[order(timespan$tmax),]"
"0",""
"0","    nuclei_count <- as.numeric(timespan[nrow(timespan),]$text) - total_nucleis"
"0",""
"0","    if (length(nuclei_count) < 1) {"
"0","      speech_rates <- c(speech_rates, 0)"
"0","      next"
"0","    }"
"0","    "
"0","    rate <- nuclei_count / TIME_INTERVAL"
"0","    total_nucleis = total_nucleis + nuclei_count"
"0",""
"0","    speech_rates <- c(speech_rates, rate)"
"0","  }"
"0",""
"0","  return(data.frame(TimeInterval = time_intervals[-length(time_intervals)], SpeechRate = speech_rates))"
"0","}"
"0",""
"0","languages <- c(""L1"", ""L2"")"
"0","tasks <- c(""Task1"", ""Task2"")"
"0",""
"0","speech_rate_data <- data.frame()"
"0",""
"0","for (language in languages) {"
"0","  for (task in tasks) {"
"0","    nuclei_df_participant <- nuclei_df %>% filter(ParticipantID == SELECTED_PARTICIPANT_ID)"
"0",""
"0","    result <- calculate_speech_rate(nuclei_df_participant, language, task)"
"0","    result$Language <- language"
"0","    result$Task <- task"
"0","    speech_rate_data <- bind_rows(speech_rate_data, result)"
"0","  }"
"0","}"
"0",""
"0","ggplot(speech_rate_data, aes(x = TimeInterval, y = SpeechRate, group = interaction(Language, Task), color = interaction(Language, Task))) +"
"0","  geom_line() +"
"0","  geom_point() +"
"0","  labs("
"0","    title = ""Speech Rate Over Time"","
"0","    x = ""Time Interval (seconds)"","
"0","    y = ""Speech Rate"""
"0","  ) +"
"0","  theme_minimal() +"
"0","  facet_grid(Language ~ Task)"
"0",""
